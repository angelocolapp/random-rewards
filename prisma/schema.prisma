generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table
model User {
  userid     Int       @id @default(autoincrement())
  name       String
  password   String
  document   String
  email      String
  phone      String
  birthday   DateTime
  createdat  DateTime @updatedAt

  // Relation with Raffle model (one-to-many)
  rafflesOwned   Raffle[] @relation("owner")
  rafflesWon     Raffle[] @relation("winner")
  numbersOwned   Number[] @relation("owner")
  transactions   Transaction[] @relation("buyer")
  soldTransactions Transaction[] @relation("seller") // Opposite relation for seller
}

// Raffles table
model Raffle {
  raffleId        Int       @id @default(autoincrement())
  ownerId         Int
  createdAt       DateTime
  numberQuantity  Int
  drawDate        DateTime
  winningNumber   Int?
  winnerId        Int?
  prizes          String
  title           String
  description     String
  quotaQuantity   Int
  quotaValue      Int

  // Relation with User model (many-to-one)
  owner           User      @relation("owner", fields: [ownerId], references: [userid])
  winner          User?     @relation("winner", fields: [winnerId], references: [userid])
  numbers         Number[]  @relation("raffle")
  transactions    Transaction[] @relation("raffle")
}

// Numbers table
model Number {
  numberId    Int      @id @default(autoincrement())
  raffleId    Int
  numberValue Int
  ownerId     Int

  // Relation with User model (one-to-many)
  owner       User      @relation("owner", fields: [ownerId], references: [userid])
  raffle      Raffle    @relation("raffle", fields: [raffleId], references: [raffleId])
}

// Transactions table
model Transaction {
  transactionId   Int      @id @default(autoincrement())
  value           Float
  numbersBought   Int
  raffleId        Int
  transactionDate DateTime
  status          String
  buyerId         Int
  sellerId        Int

  // Relation with User model (many-to-one)
  buyer           User      @relation("buyer", fields: [buyerId], references: [userid])
  seller          User      @relation("seller", fields: [sellerId], references: [userid])
  raffle          Raffle    @relation("raffle", fields: [raffleId], references: [raffleId])
}
